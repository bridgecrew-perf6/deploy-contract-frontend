{"version":3,"sources":["logo.svg","components/toast/Toast.component.jsx","constant/constant.js","services/web3.service.js","components/form/FormComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["toast","success","message","cogoToast","position","heading","error","JSON","stringify","info","Constants","ERC20_BYTE_CODE","ERC20ABI","require","Web3Service","initializeWeb3","a","window","ethereum","web3","isMetaMask","Web3","currentProvider","getNetworkId","eth","net","getId","deployContract","data","account","setIsDisabled","name","symbol","supply","setContract","Contract","contract","deploy","arguments","estimateGas","from","utils","toHex","gas","transactionHash","send","on","console","log","receipt","contractAddress","isShowContract","address","FormComponent","wallet","useState","isDisabled","formik","useFormik","initialValues","validationSchema","Yup","min","required","matches","max","onSubmit","values","toUpperCase","resetForm","useCallback","useEffect","Form","handleSubmit","autoComplete","className","Row","Col","sm","Group","Label","Control","disabled","onBlur","handleBlur","onChange","handleChange","value","type","id","placeholder","touched","errors","Button","Spinner","as","animation","size","role","App","network","setWallet","isCopied","setIsCopied","accountChanged","accounts","networkId","networkChanged","getAddress","request","method","Toast","Body","onClick","copy","setTimeout","bind","this","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b9db7a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import cogoToast from \"cogo-toast\";\n\nclass Toaster {\n  success = message => {\n    let options = { position: \"top-right\", heading: \"Success\" };\n    cogoToast.success(message, options);\n  };\n\n  error = message => {\n    let options = { position: \"top-right\", heading: \"Error\" };\n    cogoToast.error(JSON.stringify(message), options);\n  };\n\n  info = message => {\n    let options = { position: \"top-right\", heading: \"Info\" };\n    cogoToast.info(message, options);\n  };\n}\n\nexport const toast = new Toaster();\n","const ERC20_BYTE_CODE = \"0x60806040523480156200001157600080fd5b5060405162001775380380620017758339810160408190526200003491620003d8565b8251839083906200004d90600390602085019062000287565b5080516200006390600490602084019062000287565b5050506000620000786200011a60201b60201c565b600580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620000d1336200011e565b6000620000e0606483620004a3565b90506200011033620000f162000170565b620000fe90600a62000511565b6200010a908462000609565b62000175565b5050505062000694565b3390565b620001398160066200024960201b620006e51790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600690565b6001600160a01b038216620001a75760405162461bcd60e51b81526004016200019e9062000448565b60405180910390fd5b620001b56000838362000282565b8060026000828254620001c9919062000488565b90915550506001600160a01b03821660009081526020819052604081208054839290620001f890849062000488565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200023d9085906200047f565b60405180910390a35050565b6001600160a01b0381166200025d57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b505050565b82805462000295906200062b565b90600052602060002090601f016020900481019282620002b9576000855562000304565b82601f10620002d457805160ff191683800117855562000304565b8280016001018555821562000304579182015b8281111562000304578251825591602001919060010190620002e7565b506200031292915062000316565b5090565b5b8082111562000312576000815560010162000317565b600082601f8301126200033e578081fd5b81516001600160401b03808211156200035b576200035b6200067e565b6040516020601f8401601f19168201810183811183821017156200038357620003836200067e565b60405283825285840181018710156200039a578485fd5b8492505b83831015620003bd57858301810151828401820152918201916200039e565b83831115620003ce57848185840101525b5095945050505050565b600080600060608486031215620003ed578283fd5b83516001600160401b038082111562000404578485fd5b62000412878388016200032d565b9450602086015191508082111562000428578384fd5b5062000437868287016200032d565b925050604084015190509250925092565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200049e576200049e62000668565b500190565b600082620004bf57634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611620004d8575062000508565b818704821115620004ed57620004ed62000668565b80861615620004fb57918102915b9490941c938002620004c7565b94509492505050565b60006200052560001960ff8516846200052c565b9392505050565b6000826200053d5750600162000525565b816200054c5750600062000525565b81600181146200056557600281146200057057620005a4565b600191505062000525565b60ff84111562000584576200058462000668565b6001841b9150848211156200059d576200059d62000668565b5062000525565b5060208310610133831016604e8410600b8410161715620005dc575081810a83811115620005d657620005d662000668565b62000525565b620005eb8484846001620004c4565b80860482111562000600576200060062000668565b02949350505050565b600081600019048311821515161562000626576200062662000668565b500290565b6002810460018216806200064057607f821691505b602082108114156200066257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6110d180620006a46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d71461022f578063a9059cbb14610242578063aa271e1a14610255578063dd62ed3e14610268578063f2fde38b1461027b57610121565b8063715018a6146101ef5780638da5cb5b146101f757806395d89b411461020c578063983b2d5614610214578063986502751461022757610121565b8063313ce567116100f4578063313ce5671461018c57806339509351146101a157806340c10f19146101b457806342966c68146101c957806370a08231146101dc57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016457806323b872dd14610179575b600080fd5b61012e61028e565b60405161013b9190610c9b565b60405180910390f35b610157610152366004610c3b565b610320565b60405161013b9190610c90565b61016c61033d565b60405161013b9190611004565b610157610187366004610c00565b610343565b6101946103e3565b60405161013b919061100d565b6101576101af366004610c3b565b6103e8565b6101c76101c2366004610c3b565b610437565b005b6101c76101d7366004610c64565b610457565b61016c6101ea366004610bad565b61046b565b6101c761048a565b6101ff610513565b60405161013b9190610c7c565b61012e610522565b6101c7610222366004610bad565b610531565b6101c761054c565b61015761023d366004610c3b565b610557565b610157610250366004610c3b565b6105d2565b610157610263366004610bad565b6105e6565b61016c610276366004610bce565b6105f9565b6101c7610289366004610bad565b610624565b60606003805461029d9061104a565b80601f01602080910402602001604051908101604052809291908181526020018280546102c99061104a565b80156103165780601f106102eb57610100808354040283529160200191610316565b820191906000526020600020905b8154815290600101906020018083116102f957829003601f168201915b5050505050905090565b600061033461032d61071d565b8484610721565b50600192915050565b60025490565b60006103508484846107d5565b6001600160a01b03841660009081526001602052604081208161037161071d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103bd5760405162461bcd60e51b81526004016103b490610e41565b60405180910390fd5b6103d8856103c961071d565b6103d38685611033565b610721565b506001949350505050565b600690565b60006103346103f561071d565b84846001600061040361071d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103d3919061101b565b610440336105e6565b61044957600080fd5b61045382826108fd565b5050565b61046861046261071d565b826109bd565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b61049261071d565b6001600160a01b03166104a3610513565b6001600160a01b0316146104c95760405162461bcd60e51b81526004016103b490610e89565b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b6005546001600160a01b031690565b60606004805461029d9061104a565b61053a336105e6565b61054357600080fd5b61046881610aa3565b61055533610ae5565b565b6000806001600061056661071d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156105b25760405162461bcd60e51b81526004016103b490610f88565b6105c86105bd61071d565b856103d38685611033565b5060019392505050565b60006103346105df61071d565b84846107d5565b60006105f3600683610b27565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61062c61071d565b6001600160a01b031661063d610513565b6001600160a01b0316146106635760405162461bcd60e51b81526004016103b490610e89565b6001600160a01b0381166106895760405162461bcd60e51b81526004016103b490610d73565b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166106f857600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b3390565b6001600160a01b0383166107475760405162461bcd60e51b81526004016103b490610f44565b6001600160a01b03821661076d5760405162461bcd60e51b81526004016103b490610db9565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107c8908590611004565b60405180910390a3505050565b6001600160a01b0383166107fb5760405162461bcd60e51b81526004016103b490610eff565b6001600160a01b0382166108215760405162461bcd60e51b81526004016103b490610cee565b61082c838383610b5c565b6001600160a01b038316600090815260208190526040902054818110156108655760405162461bcd60e51b81526004016103b490610dfb565b61086f8282611033565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906108a590849061101b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ef9190611004565b60405180910390a350505050565b6001600160a01b0382166109235760405162461bcd60e51b81526004016103b490610fcd565b61092f60008383610b5c565b8060026000828254610941919061101b565b90915550506001600160a01b0382166000908152602081905260408120805483929061096e90849061101b565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109b1908590611004565b60405180910390a35050565b6001600160a01b0382166109e35760405162461bcd60e51b81526004016103b490610ebe565b6109ef82600083610b5c565b6001600160a01b03821660009081526020819052604090205481811015610a285760405162461bcd60e51b81526004016103b490610d31565b610a328282611033565b6001600160a01b03841660009081526020819052604081209190915560028054849290610a60908490611033565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107c8908690611004565b610aae6006826106e5565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610af0600682610b61565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610b3c57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b505050565b6001600160a01b038116610b7457600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b038116811461048557600080fd5b600060208284031215610bbe578081fd5b610bc782610b96565b9392505050565b60008060408385031215610be0578081fd5b610be983610b96565b9150610bf760208401610b96565b90509250929050565b600080600060608486031215610c14578081fd5b610c1d84610b96565b9250610c2b60208501610b96565b9150604084013590509250925092565b60008060408385031215610c4d578182fd5b610c5683610b96565b946020939093013593505050565b600060208284031215610c75578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610cc757858101830151858201604001528201610cab565b81811115610cd85783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561102e5761102e611085565b500190565b60008282101561104557611045611085565b500390565b60028104600182168061105e57607f821691505b6020821081141561107f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220facd935094ad9a12ad01895aed66951bad9e1d09f40a6fd0cff6f973bac898ec64736f6c63430008000033\";\n\nconst Constants = {\n    ERC20_BYTE_CODE\n}\n\nexport default Constants;\n","import Web3 from \"web3\";\nimport { toast } from \"../components/toast/Toast.component\";\nimport Constants from \"../constant/constant\";\nconst ERC20ABI = require('../bin/ABI/erc20.abi.json');\n\nclass Web3Service {\n\n    initializeWeb3 = async () => {\n        try {\n            const { ethereum, web3 } = window;\n            if ((ethereum) && (ethereum.isMetaMask)) {\n                return new Web3(ethereum);\n            } else if (web3) {\n                return new Web3(window.web3.currentProvider);\n            }\n\n            toast.info(\"Please install your metamask account.\");\n        } catch (error) {\n            toast.error(error);\n        }\n    }\n\n    getNetworkId = async () => {\n        try {\n            const web3 = await this.initializeWeb3();\n            return new web3.eth.net.getId();\n        } catch (error) {\n            toast.error(error);\n        }\n    }\n\n    deployContract = async (data) => {\n        const { account, setIsDisabled, name, symbol, supply, setContract } = data;\n\n        try {\n            const { ERC20_BYTE_CODE } = Constants;\n            const web3 = await this.initializeWeb3();\n\n            let contract = await new web3.eth.Contract(ERC20ABI);\n            contract = contract.deploy({\n                data: ERC20_BYTE_CODE,\n                arguments: [name, symbol, supply]\n            });\n\n            const estimateGas = await contract.estimateGas({ from: account });\n            contract.send({\n                from: account,\n                gas: await web3.utils.toHex(estimateGas)\n            }, (error, transactionHash) => {\n                if (error) {\n                    setIsDisabled(false);\n                    toast.error(\"Transaction has been canncelled, Please try again\");\n                };\n            }).on('transactionHash', (transactionHash) => {\n                console.log(`Transaction Hash: ${transactionHash}`);\n            }).on('receipt', (receipt) => {\n                const { contractAddress } = receipt;\n                setContract({ isShowContract: true, address: contractAddress });\n                setIsDisabled(false);\n                toast.success(\"Contract has been deployed, click to copy your address\");\n            });\n        } catch (error) {\n            setIsDisabled(false);\n            throw error;\n        }\n    }\n}\n\nexport default new Web3Service();","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Button, Col, Form, Row, Spinner } from \"react-bootstrap\";\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport Web3Service from \"../../services/web3.service\";\n\nconst FormComponent = ({ wallet, setContract }) => {\n    const [isDisabled, setIsDisabled] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            symbol: \"\",\n            supply: \"1000000\",\n\n        },\n        validationSchema: Yup.object({\n            name: Yup.string()\n                .min(2, 'Minimum length of name must be 2')\n                .required('This field is required*')\n                .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed.\"),\n            symbol: Yup.string()\n                .min(2, 'Minimum length of name must be 2')\n                .required('This field is required*')\n                .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed.\"),\n            supply: Yup.string()\n                .max(8, 'Minimum length of name must be 8')\n                .required('This field is required*'),\n\n        }),\n        onSubmit: values => {\n            const { deployContract } = Web3Service;\n            values.name = values.name.toUpperCase();\n            values.symbol = values.symbol.toUpperCase();\n            setIsDisabled(true);\n            deployContract({ ...values, ...wallet, setIsDisabled, setContract });\n        },\n    });\n\n    const resetForm = useCallback(() => {\n        formik.resetForm();\n    }, [formik])\n\n    useEffect(() => {\n        if (!isDisabled) resetForm();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isDisabled])\n\n    return (\n        <Form onSubmit={formik.handleSubmit} autoComplete=\"off\" className=\"form_v1\">\n            <Row>\n                <Col sm={6}>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control disabled={isDisabled} onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.name} type=\"text\" name=\"name\" id=\"name\" placeholder=\"@eg: USDT\" />\n\n                        {formik.touched.name && formik.errors.name ? (\n                            <div className=\"error-formik\">{formik.errors.name}</div>\n                        ) : null}\n                    </Form.Group>\n                </Col>\n                <Col sm={6}>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Symbol</Form.Label>\n                        <Form.Control disabled={isDisabled} onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.symbol} type=\"text\" name=\"symbol\" id=\"symbol\" placeholder=\"@eg: USDT\" />\n\n                        {formik.touched.symbol && formik.errors.symbol ? (\n                            <div className=\"error-formik\">{formik.errors.name}</div>\n                        ) : null}\n                    </Form.Group>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col sm={12}>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Supply</Form.Label>\n                        <Form.Control disabled={isDisabled} onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.supply} type=\"text\" name=\"supply\" id=\"supply\" placeholder=\"@eg: 1000000000000\" />\n\n                        {formik.touched.supply && formik.errors.supply ? (\n                            <div className=\"error-formik\">{formik.errors.name}</div>\n                        ) : null}\n                    </Form.Group>\n                </Col>\n            </Row>\n\n            <Button type=\"submit\" className=\"btn_submit\" disabled={isDisabled}>\n                {\n                    isDisabled &&\n                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                }\n\n                {\"  \"} { isDisabled ? \"Deploying\" : \"Deploy\" }\n            </Button>\n        </Form>\n    )\n}\n\nexport default FormComponent;","import React, { useCallback, useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormComponent from './components/form/FormComponent';\nimport Web3Service from './services/web3.service';\nimport { Toast } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\n\nfunction App() {\n\n  const [wallet, setWallet] = useState({ account: \"\", network: \"\" });\n  const [contract, setContract] = useState({ isShowContract: false, address: \"\" });\n  const [isCopied, setIsCopied] = useState(false);\n\n  const accountChanged = useCallback(async () => {\n    window.ethereum.on('accountsChanged', async (accounts) => {\n      const { getNetworkId } = Web3Service;\n      accounts = accounts[0];\n      const networkId = await getNetworkId();\n      setWallet({ account: accounts, network: networkId });\n    });\n  }, [])\n\n  const networkChanged = useCallback(async () => {\n    window.ethereum.on('networkChanged', function (networkId) {\n      setWallet({ account: \"\", network: \"\" });\n    })\n  }, []);\n\n  const getAddress = useCallback(async () => {\n    const { initializeWeb3, getNetworkId } = Web3Service;\n    const isWeb3 = await initializeWeb3();\n    if (isWeb3) {\n      const { ethereum } = window;\n      const networkId = await getNetworkId();\n      let address = await ethereum.request({ method: 'eth_requestAccounts' });\n      address = address[0];\n      setWallet({ account: address, network: networkId })\n    }\n  }, []);\n\n  const copyToClipboard = (address) => {\n    copy(address);\n    setIsCopied(true);\n    setTimeout(() => {\n      setContract({ isShowContract: false, address: \"\" });\n      setIsCopied(false);\n    }, 2000)\n  }\n\n  useEffect(() => {\n    if (!window.ethereum) return;\n    accountChanged();\n    networkChanged();\n  }, [accountChanged, networkChanged]);\n\n  useEffect(() => {\n    getAddress();\n  }, [getAddress]);\n\n  return (\n    <div className=\"App\">\n      {\n        contract.isShowContract &&\n        <Toast>\n          <Toast.Body>\n            <p className='toastmessage' onClick={copyToClipboard.bind(this, contract.address)}>\n              {\n                isCopied ?\n                  <small>Copied...!!</small> :\n                  <small>Contract Address:- {\" \"} {contract.address}</small>\n              }\n            </p>\n          </Toast.Body>\n        </Toast>\n      }\n\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className='erc20_token'>\n          <h2>Deploy Your ERC20 Token</h2>\n          <p>Add Details & Get Your Own Erc20 Token</p>\n        </div>\n\n\n        <FormComponent wallet={wallet} setContract={setContract} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}